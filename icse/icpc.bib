@inproceedings{kersten2005mylar,
  title={{Mylar: a degree-of-interest model for IDEs}},
  author={Kersten, M. and Murphy, G.C.},
  booktitle={International Conference on Aspect-oriented Software Development},
  pages={159--168},
  year={2005},
  address = {Chicago},
  month = {March}
}

@inproceedings{treude2010,
 author = {Treude, Christoph and Storey, Margaret-Anne},
 title = {Awareness 2.0: staying aware of projects, developers and tasks using dashboards and feeds},
 booktitle = {International Conference on Software Engineering},
 year = {2010},
 pages = {365--374},
 address = {Cape Town, South Africa},
 publisher = {ACM},
 }

@inproceedings{Kohavi1995,
abstract = {We review accuracy estimation methods and compare the two most common methods crossvalidation and bootstrap. Recent experimental results on artificial data and theoretical re cults in restricted settings have shown that for selecting a good classifier from a set of classifiers (model selection), ten-fold cross-validation may be better than the more expensive leaveone-out cross-validation. We report on a largescale experiment--over half a million runs of C4.5 and a Naive-Bayes algorithm--to estimate the effects of different parameters on these algrithms on real-world datasets. For crossvalidation we vary the number of folds and whether the folds are stratified or not, for bootstrap, we vary the number of bootstrap samples. Our results indicate that for real-word datasets similar to ours, The best method to use for model selection is ten fold stratified cross validation even if computation power allows using more folds.},
address = {Toronto},
author = {Kohavi, Ron},
booktitle = {International Joint Conference On Artificial Intelligence},
issn = {1045-0823},
pages = {1137--1143},
title = {{A study of cross-validation and bootstrap for accuracy estimation and model selection}},
url = {http://portal.acm.org/citation.cfm?id=1643047},
year = {1995}
}


@inproceedings{ernst10refsq,
address = {Essen, Germany},
author = {Ernst, Neil A and Mylopoulos, John},
booktitle = {International Working Conference on Requirements Engineering: Foundation for Software Quality},
month = {June},
title = {{On the perception of software quality requirements during the project lifecycle}},
year = {2010},
}

@inproceedings{Hindle2007,
address = {Minneapolis, MN},
author = {Hindle, Abram and Godfrey, Michael W and Holt, Richard C},
booktitle = {International Workshop on Mining Software Repositories at ICSE},
doi = {10.1109/MSR.2007.28},
isbn = {0-7695-2950-X},
month = {May},
pages = {19--27},
title = {{Release Pattern Discovery via Partitioning: Methodology and Case Study}},
year = {2007}
}
@article{girba06,
author = {Girba, Tudor and Ducasse, Stephane},
journal = {Journal of Software Maintenance and Evolution: Research and Practice},
pages = {207--236},
title = {{Modeling history to analyze software evolution}},
volume = {18},
year = {2006}
}
@inproceedings{rigby07msr,
abstract = {Developer mailing lists are a rich source of information about Open Source Software (OSS) development. The unstructured nature of email makes extracting information difficult. We use a psychometrically-based linguistic analysis tool, the LIWC, to examine the Apache httpd server developer mailing list. We conduct three preliminary experiments to assess the appropriateness of this tool for information extraction from mailing lists. First, using LIWC dimensions that are correlated with the big five personality traits, we assess the personality of four top developers against a baseline for the entire mailing list. The two developers that were responsible for the major Apache releases had similar personalities. Their personalities were different from the baseline and the other developers. Second, the first and last 50 emails for two top developers who have left the project are examined. The analysis shows promise in understanding why developers join and leave a project. Third, we examine word usage on the mailing list for two major Apache releases. The differences may reflect the relative success of each release.},
address = {Leipzig},
author = {Rigby, P C and Hassan, Ahmed E},
booktitle = {International Workshop on Mining Software Repositories at ICSE},
keywords = {apache empirical open-source psychometric},
pages = {23},
title = {{What Can OSS Mailing Lists Tell Us? A Preliminary Psychometric Text Analysis of the Apache Developer Mailing List}},
year = {2007}
}
@techreport{iso9126,
key = {ISO},
editor = {Coallier, Fran\c{c}ois},
institution = {International Standards Organization - JTC 1/SC 7},
title = {{Software engineering -- Product quality -- Part 1: Quality model}},
year = {2001}
}
@inproceedings{ernst07icsm,
address = {Paris, France},
author = {Ernst, Neil A and Mylopoulos, John},
booktitle = {International Workshop on Software Evolvability at ICSM},
file = {:Users/nernst/pdfs/Ernst, Mylopoulos - 2007 - Tracing software evolution history with design goals.pdf:pdf},
month = {October},
title = {{Tracing software evolution history with design goals}},
year = {2007}
}
@book{chung99,
address = {Boston},
author = {Chung, Lawrence and Nixon, Brian A and Yu, Eric S and Mylopoulos, John},
isbn = {0792386663},
month = {October},
publisher = {Kluwer Academic Publishers},
series = {International Series in Software Engineering},
title = {{Non-Functional Requirements in Software Engineering}},
volume = {5},
year = {1999}
}
@inproceedings{anton01,
address = {Toronto, Canada},
author = {Ant\'{o}n, Annie I and Potts, Colin},
booktitle = {International Conference on Software Engineering},
pages = {421--430},
title = {{Functional paleontology: system evolution as the user sees it}},
year = {2001}
}
@article{scacchi02,
author = {Scacchi, Walt},
doi = {10.1049/ip-sen:20020202},
journal = {IET Software},
number = {1},
pages = {24--39},
title = {{Understanding the requirements for developing open source softwaresystems}},
volume = {149},
year = {2002}
}
@inproceedings{scacchi05b,
abstract = {Understanding the context, structure, activities, and content of software development processes found in practice has been and remains a challenging problem. In the world of free/open source software development, discovering and understanding what processes are used in particular projects is important in determining how they are similar to or different from those advocated by the software engineering community. Prior studies however have revealed that the requirements processes in OSSD projects are different in a number of ways, including the general lack of explicit software requirements specifications. In this paper, we describe how a variety of modeling perspectives and techniques are used to elicit, analyze, and validate software requirements processes found in OSSD projects, with examples drawn from studies of the NetBeans.org project.},
address = {Genoa, Italy},
author = {Scacchi, Walt and Jensen, Chris and Noll, John and Elliott, Margaret},
booktitle = {International Conference on Open Source Systems},
month = {July},
pages = {1----8},
title = {{Multi-Modal Modeling, Analysis and Validation of Open Source Software Requirements Processes}},
volume = {1},
year = {2005}
}
@inproceedings{Hindle09ICSM,
abstract = {As development on a software project progresses, developers shift their focus between different topics and tasks many times. Managers and newcomer developers often seek ways of understanding what tasks have recently been worked on and how much effort has gone into each; for example, a manager might wonder what unexpected tasks occupied their team's attention during a period when they were supposed to have been implementing new features. Tools such as Latent Dirichlet Allocation (LDA) and Latent Semantic Indexing (LSI) can be used to extract a set of independent topics from a corpus of commit-log comments. Previous work in the area has created a single set of topics by analyzing comments from the entire lifetime of the project. In this paper, we propose windowing the topic analysis to give a more nuanced view of the system's evolution. By using a defined time-window of, for example, one month, we can track which topics come and go over time, and which ones recur. We propose visualizations of this model that allows us to explore the evolving stream of topics of development occurring over time. We demonstrate that windowed topic analysis offers advantages over topic analysis applied to a project's lifetime because many topics are quite local. },
address = {Edmonton, Alberta, Canada},
author = {Hindle, Abram and Godfrey, Michael W. and Holt, Richard C.},
booktitle = {International Conference on Software Maintenance},
doi = {10.1109/ICSM.2009.5306310},
file = {:Users/nernst/pdfs/Godfrey, Hindle, Holt - 2009 - What's hot and what's not Windowed developer topic analysis.pdf:pdf},
isbn = {978-1-4244-4897-5},
month = {September},
pages = {339--348},
title = {{What's hot and what's not: Windowed developer topic analysis}},
year = {2009}
}
@inproceedings{marcus04wcre,
author = {Marcus, A. and Sergeyev, A. and Rajlich, V. and Maletic, J.I.},
booktitle = {11th Working Conference on Reverse Engineering},
doi = {10.1109/WCRE.2004.10},
file = {:Users/nernst/pdfs/Marcus et al. - 2004 - An information retrieval approach to concept location in source code.pdf:pdf},
isbn = {0-7695-2243-2},
month = {November},
pages = {214--223},
title = {{An information retrieval approach to concept location in source code}},
year = {2004}
}
@inproceedings{marcus03,
author = {Marcus, A. and Maletic, J I},
booktitle = {International Conference on Software Engineering},
doi = {10.1109/ICSE.2003.1201194},
isbn = {0-7695-1877-X},
pages = {125--135},
title = {{Recovering documentation-to-source-code traceability links using latent semantic indexing}},
year = {2003}
}
@inproceedings{mens08icsm,
abstract = {We present a metrics-based study of the evolution of Eclipse, an open source integrated development environment, based on data from seven major releases, from releases 1.0 to 3.3. We investigated whether three of the laws of software evolution were supported by the data. We found that Eclipse displayed continual change and growth, hence supporting laws 1 and 6. Six size indicators, out of eight, closely followed trend models. Four were linear and two superlinear. We found evidence of increasing complexity (law 2) in only two indicators, out of five. At subproject level, size and complexity are not distributed uniformly, and subproject size can be modelled as a negative exponential function of the rank position. We encountered a range of different size and complexity trends across subprojects. Our approach and results can help in evaluating the future evolution of Eclipse, the evolution of other systems and in performing comparisons.},
address = {Shanghai, China},
author = {Mens, Tom and Fernandez-Ramil, Juan and Degrandsart, S},
booktitle = {International Conference on Software Maintenance},
issn = {1063-6773},
keywords = {evolution software},
month = {October},
pages = {386--395},
title = {{The evolution of Eclipse}},
year = {2008}
}
@book{waldo93,
address = {Cambridge, Massachusetts},
editor = {Waldo, Jim},
keywords = {c++ evolution msr requirements},
publisher = {MIT Press},
title = {{The Evolution of C++}},
year = {1993}
}
@inproceedings{lehman97sms,
abstract = {The process of E-type software development and evolution has proven most difficult to improve, possibly due to the fact that the process is a multi-input, multi-output system involving feedback at many levels. This observation, first recorded in the early 1970s during an extended study of OS/360 evolution, was recently captured in a FEAST (Feedback, Evolution And Software Technology) hypothesis: a hypothesis being studied in on-going two-year project, FEAST/1. Preliminary conclusions based on a study of a financial transaction system-Logica's Fastwire (FW)-are outlined and compared with those reached during the earlier OS/360 study. The new analysis supports, or better does not contradict, the laws of software evolution, suggesting that the 1970s approach to metric analysis of software evolution is still relevant today. It is hoped that FEAST/1 will provide a foundation for mastering the feedback aspects of the software evolution process, opening up new paths for process modelling and improvement},
address = {Albuquerque, NM},
author = {Lehman, Meir M and Ramil, J F and Wernick, P D and Perry, D E and Turski, W M},
booktitle = {International Software Metrics Symposium},
keywords = {evolution metrics software},
pages = {20--32},
title = {{Metrics and laws of software evolution-the nineties view}},
year = {1997}
}
@inproceedings{easterbrook2001,
address = {Toronto},
author = {Easterbrook, Steve M and Chechik, M},
booktitle = {International Conference on Software Engineering},
file = {:Users/nernst/pdfs/Easterbrook, Chechik - 2001 - A framework for multi-valued reasoning over inconsistent viewpoints.pdf:pdf},
keywords = {inconsistent model reasoning viewpoints},
month = {September},
pages = {411--420},
title = {{A framework for multi-valued reasoning over inconsistent viewpoints}},
year = {2001}
}
@article{benestad09,
abstract = {Understanding, managing and reducing costs and risks inherent in change are key challenges of software maintenance and evolution, addressed in empirical studies with many different research approaches. Change-based studies analyze data that describes the individual changes made to software systems. This approach can be effective in order to discover cost and risk factors that are hidden at more aggregated levels. However, it is not trivial to derive appropriate measures of individual changes for specific measure- ment goals. The purpose of this review is to improve change-based studies by (1) summarizing how attributes of changes have been measured to reach specific study goals and (2) describing current achieve- ments and challenges, leading to a guide for future change-based studies. Thirty-four papers conformed to the inclusion criteria. Forty-three attributes of changes were identified, and classified according to a conceptual model developed for the purpose of this classification. The goal of each study was to either characterize the evolution process, to assess causal factors of cost and risk, or to predict costs and risks. Effective accumulation of knowledge across change-based studies requires precise definitions of attributes and measures of change. We recommend that new change-based studies base such definitions on the proposed conceptual model.},
address = {Simula Research Laboratory, P.O. Box 134, 1325 Lysaker, Norway; University of Oslo, Norway},
author = {Benestad, Hans Christian and Anda, Bente and Arisholm, Erik},
doi = {10.1002/smr.412},
file = {:Users/nernst/pdfs/Benestad, Anda, Arisholm - 2009 - Understanding software maintenance and evolution by analyzing individual changes a literature review.pdf:pdf},
journal = {Journal of Software Maintenance and Evolution: Research and Practice},
keywords = {imported},
pages = {n/a},
title = {{Understanding software maintenance and evolution by analyzing individual changes: a literature review}},
volume = {9999},
year = {2009}
}
@article{Ko2006,
author = {Ko, A. J. and Myers, Brad},
doi = {10.1109/VLHCC.2006.3},
file = {:Users/nernst/pdfs/Ko, Myers - 2006 - A Linguistic Analysis of How People Describe Software Problems.pdf:pdf},
isbn = {0-7695-2586-5},
journal = {Journal of Visual Languages and Human-Centric Computing},
pages = {127--134},
title = {{A Linguistic Analysis of How People Describe Software Problems}},
year = {2006}
}
@inproceedings{Poshyvanyk2007,
author = {Poshyvanyk, Denys and Marcus, Andrian},
booktitle = {International Conference on Program Comprehension},
doi = {10.1109/ICPC.2007.13},
file = {:Users/nernst/pdfs/Poshyvanyk, Marcus - 2007 - Combining Formal Concept Analysis with Information Retrieval for Concept Location in Source Code.pdf:pdf},
isbn = {0-7695-2860-0},
issn = {1063-6897},
month = {June},
pages = {37--48},
title = {{Combining Formal Concept Analysis with Information Retrieval for Concept Location in Source Code}},
year = {2007}
}
@inproceedings{Marcus2005,
author = {Marcus, A. and Rajlich, V. and Buchta, J. and Petrenko, M. and Sergeyev, A.},
booktitle = {International Workshop on Program Comprehension},
file = {:Users/nernst/pdfs/Marcus et al. - 2005 - Static techniques for concept location in object-oriented code.pdf:pdf},
pages = {33–42},
title = {{Static techniques for concept location in object-oriented code}},
year = {2005}
}
@inproceedings{Poshyvanyk2006,
author = {Gueheneuc, Yann-Gael and Poshyvanyk, Denys and Marcus, a. and Rajlich, V. and Antoniol, Giuliano},
booktitle = {International Conference on Program Comprehension},
doi = {10.1109/ICPC.2006.17},
file = {:Users/nernst/pdfs/Gueheneuc et al. - 2006 - Combining Probabilistic Ranking and Latent Semantic Indexing for Feature Identification.pdf:pdf},
isbn = {0-7695-2601-2},
pages = {137--148},
title = {{Combining Probabilistic Ranking and Latent Semantic Indexing for Feature Identification}},
year = {2006}
}
@inproceedings{Kuhn2005,
author = {Kuhn, A. and Ducasse, Stephane and Girba, T.},
booktitle = {International Working Conference on Reverse Engineering},
doi = {10.1109/WCRE.2005.16},
file = {:Users/nernst/pdfs/Kuhn, Ducasse, Girba - 2005 - Enriching Reverse Engineering with Semantic Clustering.pdf:pdf},
isbn = {0-7695-2474-5},
keywords = {and only a matter,clustering,concept loca-,e,g,of correct structure and,reverse engineering,semantic analysis,since the communication with,syntax,ter,the,the machine is formal,tion},
pages = {133--142},
title = {{Enriching Reverse Engineering with Semantic Clustering}},
year = {2005}
}
@article{Kuhn2007,
author = {Kuhn, a and Ducasse, Stephane and Girba, T},
doi = {10.1016/j.infsof.2006.10.017},
file = {:Users/nernst/pdfs/Kuhn, Ducasse, Girba - 2007 - Semantic clustering Identifying topics in source code.pdf:pdf},
issn = {09505849},
journal = {Information and Software Technology},
keywords = {clustering,latent semantic indexing,reverse engineering,visualization},
month = {March},
number = {3},
pages = {230--243},
title = {{Semantic clustering: Identifying topics in source code}},
volume = {49},
year = {2007}
}
@article{Blei2003,
author = {Blei, David M. and Ng, Andrew Y. and Jordan, Michael I},
doi = {10.1162/jmlr.2003.3.4-5.993},
editor = {Lafferty, John},
file = {:Users/nernst/pdfs/Blei, Ng, Jordan - 2003 - Latent Dirichlet Allocation.pdf:pdf},
issn = {1532-4435},
journal = {Journal of Machine Learning Research},
month = {May},
number = {4-5},
pages = {993--1022},
title = {{Latent Dirichlet Allocation}},
volume = {3},
year = {2003}
}
@article{Linstead2008,
author = {Linstead, Erik and Rigor, Paul and Bajracharya, Sushil and Lopes, Cristina and Baldi, Pierre},
file = {:Users/nernst/pdfs/Linstead et al. - 2008 - Mining internet-scale software repositories.pdf:pdf},
journal = {Advances in Neural Information Processing Systems},
title = {{Mining internet-scale software repositories}},
volume = {20},
year = {2008}
}
@article{Linstead2007,
author = {Linstead, Erik and Rigor, Paul and Bajracharya, Sushil and Lopes, Cristina and Baldi, Pierre},
doi = {10.1109/MSR.2007.20},
file = {:Users/nernst/pdfs/Linstead et al. - 2007 - Mining Eclipse Developer Contributions via Author-Topic Models.pdf:pdf},
isbn = {0-7695-2950-X},
journal = {International Workshop on Mining Software Repositories at ICSE},
month = {May},
pages = {30--30},
title = {{Mining Eclipse Developer Contributions via Author-Topic Models}},
year = {2007}
}
@article{Canfora2006,
address = {New York, New York, USA},
author = {Canfora, Gerardo and Cerulo, Luigi},
doi = {10.1145/1141277.1141693},
file = {:Users/nernst/pdfs/Canfora, Cerulo - 2006 - Supporting change request assignment in open source development.pdf:pdf},
isbn = {1595931082},
journal = {Symposium on Applied computing},
keywords = {information retrieval,maintenance task assign-,ment,mining software repositories},
pages = {1767},
title = {{Supporting change request assignment in open source development}},
year = {2006}
}
@inproceedings{Rosen-Zvi2004,
author = {Rosen-Zvi, M. and Griffiths, T. and Steyvers, M. and Smyth, P.},
booktitle = {Conference on Uncertainty in artificial intelligence},
file = {:Users/nernst/pdfs/Rosen-Zvi et al. - 2004 - The author-topic model for authors and documents.pdf:pdf},
pages = {487–494},
title = {{The author-topic model for authors and documents}},
year = {2004}
}
@article{weka09,
author = {Hall, Mark and Frank, Eibe and Holmes, Geoffrey and Pfahringer, Bernhard and Reutemann, Peter and Witten, Ian H},
journal = {SIGKDD Explorations},
number = {1},
pages = {10--18},
title = {{The WEKA Data Mining Software: An Update}},
url = {http://www.kdd.org/explorations/issues/11-1-2009-07/p2V11n1.pdf},
volume = {11},
year = {2009}
}
@book{Fellbaum1998,
editor = {Fellbaum, Christiane},
year = 1998,
pages = {445},
publisher = {MIT Press},
title = {{WordNet: An Electronic Lexical Database}}
}
@inproceedings{Boehm+:1976:ICSE,
author = {Boehm, Barry and Brown, J R and Lipow, M},
booktitle = {International Conference on Software Engineering},
pages = {592--605},
title = {{Quantitative Evaluation of Software Quality}},
year = {1976}
}
@inproceedings{Mockus00,
author = {Mockus, A. and Votta, L.G.},
booktitle = {International Conference on Software Maintenance},
doi = {10.1109/ICSM.2000.883028},
file = {:Users/nernst/pdfs/Mockus, Votta - 2000 - Identifying reasons for software changes using historic databases.pdf:pdf},
isbn = {0-7695-0753-0},
address = {San Jose, CA},
pages = {120--130},
title = {{Identifying reasons for software changes using historic databases}},
url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=883028},
year = {2000}
}

@article{mccabe1976complexity,
  title={{A complexity measure}},
  author={McCabe, T.J.},
  volume={2},
  number={4},
  journal={IEEE Transactions on software Engineering},
  pages={308--320},
  year={1976},
  publisher={IEEE}
}

@book{mccall1977,
abstract = {An hierarchical definition of factors affecting software quality was compiled after an extensive literature search. The definition covers the complete range of software development and is broken down into non-oriented and software-oriented characteristics. For the lowest level of the software-oriented factors, metrics were developed that would be independent of the programming language. These measurable criteria were collected and validated using actual Air Force data bases. A handbook was generated that will be useful to Air Force acquisition managers for specifying the overall quality of a software system.},
author = {McCall, J},
keywords = {Quality Software},
month = {November},
publisher = {General Electric},
title = {{Factors in Software Quality: Preliminary Handbook on Software Quality for an Acquisiton Manager}},
url = {http://oai.dtic.mil/oai/oai?verb=getRecord\&metadataPrefix=html\&identifier=ADA049055},
volume = {1-3},
year = {1977}
}
@INPROCEEDINGS{5072519,
title={Towards an Ontology for Software Product Quality Attributes},
author={Kayed, A. and Hirzalla, N. and Samhan, A.A. and Alfayoumi, M.},
booktitle={ International Conference on Internet and Web Applications and Services},
year={2009},
month={May},
volume={},
number={},
pages={200-204},
abstract={Recently, quality assurance concept has been developed increasingly to be included in many of our life existing fields; financial, industrial, trading, computing, etc. Software quality product attributes (SWQAs) have been created as a matter of applying the QA concept on the results of Web or desktop application development process, to fit the products with the organizational and global market standards and goals, and to provide it with a competitive advantage value. Web application or software product quality is composed of many attributes such as portability, usability, reliability, modularity. During the recent years, many researchers discussed and presented software attributes in their works which showed that till now there is a lack of consensus on the semantic of many of concepts and terminologies used in this field. Our work is focusing on studying software product quality attributes concepts and terminologies. We conduct several experiments to extract the main concepts for SWQAs. The results show that there is a number of concepts that are frequently used to describe these attributes. Summarizing and formalizing the semantic of the attributes into these concepts presents a common understanding and agreement on the semantic of SWQPAs which can be used by software engineers, researchers, practitioners, and stakeholders.},
keywords={quality assurance, software portability, software quality, software reliability, standardsWeb application development process, competitive advantage value, desktop application development process, global market standards, modularity, organizational market standards, portability, quality assurance, reliability, software product quality attributes, usability},
doi={10.1109/ICIW.2009.36},
ISSN={}, }

@inproceedings{Mei2007,
abstract = {Multinomial distributions over words are frequently used to model topics in text collections. A common, major challenge in applying all such topic models to any text mining problem is to label a multinomial topic model accurately so that a user can interpret the discovered topic. So far, such labels have been generated manually in a subjective way. In this paper, we propose probabilistic approaches to automatically labeling multinomial topic models in an objective way. We cast this labeling problem as an optimization problem involving minimizing Kullback-Leibler divergence between word distributions and maximizing mutual information between a label and a topic model. Experiments with user study have been done on two text data sets with different genres.The results show that the proposed labeling methods are quite effective to generate labels that are meaningful and useful for interpreting the discovered topic models. Our methods are general and can be applied to labeling topics learned through all kinds of topic models such as PLSA, LDA, and their variations.},
address = {San Jose, California},
author = {Mei, Qiaozhu and Shen, Xuehua and Zhai, ChengXiang},
booktitle = {International Conference on Knowledge Discovery and Data Mining},
doi = {10.1145/1281192.1281246},
file = {:Users/nernst/pdfs/Mei, Shen, Zhai - 2007 - Automatic labeling of multinomial topic models.pdf:pdf},
isbn = {9781595936097},
keywords = {multinomial distribution,statistical topic models,topic model labeling},
pages = {490--499},
title = {{Automatic labeling of multinomial topic models}},
year = {2007}
}
@inproceedings{Ugurel2002,
author = {Ugurel, S. and Krovetz, R. and Giles, C.L.},
booktitle = {International Conference on Knowledge Discovery and Data Mining},
file = {:Users/nernst/pdfs/Ugurel, Krovetz, Giles - 2002 - What's the code automatic classification of source code archives.pdf:pdf},
pages = {632–638},
title = {{What's the code?: automatic classification of source code archives}},
year = {2002}
}
@article{Boegh2008,
abstract = {A new standard on software quality requirements, ISO/IEC 25030, takes a systems perspective and suggests specifying requirements as measures and associated target values.},
author = {B{\o}egh, J{\o}rgen},
doi = {10.1109/MS.2008.30},
file = {:Users/nernst/pdfs/B{\o}egh - 2008 - A New Standard for Quality Requirements.pdf:pdf},
issn = {0740-7459},
journal = {IEEE Software},
number = {2},
pages = {57--63},
title = {{A New Standard for Quality Requirements}},
volume = {25},
year = {2008}
}
@inproceedings{Cleland-Huang2006,
abstract = {This paper introduces an information retrieval based approach for automating the detection and classification of non-functional requirements (NFRs). Early detection of NFRs is useful because it enables system level constraints to be considered and incorporated into early architectural designs as opposed to being refactored in at a later time. Candidate NFRs can be detected in both structured and unstructured documents, including requirements specifications that contain scattered and non-categorized NFRs, and freeform documents such as meeting minutes, interview notes, and memos containing stakeholder comments documenting their NFR related needs. This paper describes the classification algorithm and then evaluates its effectiveness in an experiment based on fifteen requirements specifications developed as term projects by MS students at DePaul University. An additional case study is also described in which the approach is used to classifying NFRs from a large free form requirements document obtained from Siemens Logistics and Automotive Organization},
address = {Minneapolis, Minnesota},
author = {Cleland-Huang, Jane and Settimi, Raffaella and Zou, Xuchang and Solc, Peter},
booktitle = {International Requirements Engineering Conference},
doi = {10.1109/RE.2006.65},
file = {:Users/nernst/pdfs/Cleland-Huang et al. - 2006 - The Detection and Classification of Non-Functional Requirements with Application to Early Aspects.pdf:pdf},
isbn = {0-7695-2555-5},
pages = {39--48},
title = {{The Detection and Classification of Non-Functional Requirements with Application to Early Aspects}},
year = {2006}
}
@article{german03gnome,
author = {German, Daniel M.},
doi = {10.1002/spip.189},
file = {:Users/nernst/pdfs/Section - 2004 - The GNOME Project a Case Study of Open Source, Global Software Development.pdf:pdf},
issn = {1077-4866},
journal = {Software Process: Improvement and Practice},
keywords = {empirical study,global software development,management of software,open source software,software engineering},
number = {4},
pages = {201--215},
title = {{The GNOME project: a case study of open source, global software development}},
volume = {8},
year = {2003}
}
@inproceedings{massey02icse,
address = {Orlando, FL, USA},
author = {Massey, Bart},
booktitle = {Workshop on Open source software engineering at ICSE},
file = {:Users/nernst/pdfs/Massey - 2001 - Where Do Open Source Requirements Come From (And What Should We Do About It).pdf:pdf},
keywords = {free software,open source,requirements},
title = {{Where Do Open Source Requirements Come From (And What Should We Do About It)?}},
year = {2002}
}
@inproceedings{lukins08wcre,
address = {Antwerp, Belgium},
author = {Lukins, Stacy K. and Kraft, Nicholas A. and Etzkorn, Letha H.},
booktitle = {Working Conference on Reverse Engineering},
doi = {10.1109/WCRE.2008.33},
isbn = {978-0-7695-3429-9},
pages = {155--164},
title = {{Source Code Retrieval for Bug Localization Using Latent Dirichlet Allocation}},
year = {2008}
}
@inproceedings{Linstead2008a,
abstract = {We develop and apply unsupervised statistical topic models, in particular latent Dirichlet allocation, to identify functional components of source code and study their evolution over multiple project versions. We present results for two large, open source Java projects, Eclipse and Argo UML, which are well-known and well-studied within the software mining community. Our results demonstrate the effectiveness of probabilistic topic models in automatically summarizing the temporal dynamics of software concerns, with direct application to project management and program understanding. In addition to detecting the emergence of topics on the release timeline which represent integration points for key source code functionality, our techniques can also be used to pinpoint refactoring events in the underlying software design, as well as to identify general programming concepts whose prevalence is dependent only of the size of the code base to be analyzed. Complete results are available from our supplementary materials website at http://sourcerer.ics.uci.edu/icmla2008/software\_evolution.html.},
address = {San Diego},
author = {Linstead, E. and Lopes, C. and Baldi, P.},
booktitle = {International Conference on Machine Learning and Applications},
doi = {10.1109/ICMLA.2008.47},
isbn = {978-0-7695-3495-4},
pages = {813--818},
title = {{An Application of Latent Dirichlet Allocation to Analyzing Software Evolution}},
year = {2008}
}
@inproceedings{Baldi2008,
address = {Nashville},
author = {Baldi, Pierre F. and Lopes, Cristina V. and Linstead, Erik J. and Bajracharya, Sushil K.},
booktitle = {Conference on Object Oriented Programming Systems Languages and Applications},
keywords = {aspect-oriented programming,scattering,tangling,topic models},
pages = {543--562},
title = {{A theory of aspects as latent topics}},
year = {2008}
}
@inproceedings{treude09cl,
abstract = {Understanding the evolution of a software system requires understanding how information about the release history, non-functional requirements and project milestones relates to functional requirements on the software components. This short paper describes a new tool, called CONCERNLINES, that supports this cognitive process by visualizing co-occurring concerns over time.},
address = {Vancouver},
author = {Treude, Christoph and Storey, Margaret-Anne},
booktitle = {International Conference on Software Engineering},
file = {:Users/nernst/pdfs/Treude, Storey - 2009 - ConcernLines A timeline view of co-occurring concerns.pdf:pdf},
month = {May},
pages = {575--578},
title = {{ConcernLines: A timeline view of co-occurring concerns}},
year = {2009}
}





@InCollection{mulan,
  author =       {G. Tsoumakas and I. Katakis and I. Vlahavas},
  title =        {Mining Multi-label Data},
  booktitle =    {Data Mining and Knowledge Discovery Handbook},
  editor = {O. Maimon and L. Rokach},
  publisher = {Spring},
  year =      {2010},
  edition =   {2nd},
}


@article{MSR,
  author = {Huzefa Kagdi and Michael L. Collard and Jonathan I. Maletic},
  title = {A survey and taxonomy of approaches for mining software repositories in the context of software evolution},
  journal = {J. Softw. Maint. Evol.},
  volume = {19},
  number = {2},
  year = {2007},
  issn = {1532-060X},
  pages = {77--131},
  doi = {http://dx.doi.org/10.1002/smr.344},
  publisher = {John Wiley \& Sons, Inc.},
  address = {New York, NY, USA}
}

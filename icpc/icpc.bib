Automatically generated by Mendeley 0.9.5.2
Any changes to this file will be lost if it is regenerated by Mendeley.

@inproceedings{Baldi2008,
abstract = {After more than 10 years, Aspect-Oriented Programming (AOP) is still a controversial idea. While the concept of aspects appeals to everyone's intuitions, concrete AOP solutions often fail to convince researchers and practitioners alike. This discrepancy results in part from a lack of an adequate theory of aspects, which in turn leads to the development of AOP solutions that are useful in limited situations. We propose a new theory of aspects that can be summarized as follows: concerns are latent topics that can be automatically extracted using statistical topic modeling techniques adapted to software. Software scattering and tangling can be measured precisely by the entropies of the underlying topic-over-files and files-over-topics distributions. Aspects are latent topics with high scattering entropy. The theory is validated empirically on both the large scale, with a study of 4,632 Java projects, and the small scale, with a study of 5 individual projects. From these analyses, we identify two dozen topics that emerge as general-purpose aspects across multiple projects, as well as project-specific topics/concerns. The approach is also shown to produce results that are compatible with previous methods for identifying aspects, and also extends them. Our work provides not only a concrete approach for identifying aspects at several scales in an unsupervised manner but, more importantly, a formulation of AOP grounded in information theory. The understanding of aspects under this new perspective makes additional progress toward the design of models and tools that facilitate software development.},
address = {Nashville},
author = {Baldi, Pierre F. and Lopes, Cristina V. and Linstead, Erik J. and Bajracharya, Sushil K.},
booktitle = {Conference on Object Oriented Programming Systems Languages and Applications},
file = {:Users/nernst/pdfs/Baldi et al. - 2008 - A theory of aspects as latent topics.pdf:pdf},
keywords = {aspect-oriented programming,scattering,tangling,topic models},
number = {10},
pages = {543--562},
title = {{A theory of aspects as latent topics}},
volume = {43},
year = {2008}
}
@inproceedings{Hindle09ICSM,
abstract = {As development on a software project progresses, developers shift their focus between different topics and tasks many times. Managers and newcomer developers often seek ways of understanding what tasks have recently been worked on and how much effort has gone into each; for example, a manager might wonder what unexpected tasks occupied their team's attention during a period when they were supposed to have been implementing new features. Tools such as Latent Dirichlet Allocation (LDA) and Latent Semantic Indexing (LSI) can be used to extract a set of independent topics from a corpus of commit-log comments. Previous work in the area has created a single set of topics by analyzing comments from the entire lifetime of the project. In this paper, we propose windowing the topic analysis to give a more nuanced view of the system's evolution. By using a defined time-window of, for example, one month, we can track which topics come and go over time, and which ones recur. We propose visualizations of this model that allows us to explore the evolving stream of topics of development occurring over time. We demonstrate that windowed topic analysis offers advantages over topic analysis applied to a project's lifetime because many topics are quite local. },
address = {Edmonton, Alberta, Canada},
author = {Godfrey, Michael W. and Hindle, Abram and Holt, Richard C.},
booktitle = {International Conference on Software Maintenance},
doi = {10.1109/ICSM.2009.5306310},
file = {:Users/nernst/pdfs/Godfrey, Hindle, Holt - 2009 - What's hot and what's not Windowed developer topic analysis.pdf:pdf},
isbn = {978-1-4244-4897-5},
month = {September},
pages = {339--348},
title = {{What's hot and what's not: Windowed developer topic analysis}},
year = {2009}
}
@inproceedings{marcus04wcre,
author = {Marcus, A. and Sergeyev, A and Rajlich, V and Maletic, J I},
booktitle = {International Working Conference on Reverse Engineering},
file = {:Users/nernst/pdfs/Marcus et al. - 2004 - An information retrieval approach to concept location in source code.pdf:pdf},
month = {November},
pages = {214--223},
title = {{An information retrieval approach to concept location in source code}},
year = {2004}
}
@inproceedings{marcus03,
author = {Marcus, A. and Maletic, J I},
booktitle = {International Conference on Software Engineering},
doi = {10.1109/ICSE.2003.1201194},
isbn = {0-7695-1877-X},
pages = {125--135},
publisher = {Ieee},
title = {{Recovering documentation-to-source-code traceability links using latent semantic indexing}},
year = {2003}
}
@inproceedings{easterbrook2001,
address = {Toronto},
author = {Easterbrook, Steve M and Chechik, M},
booktitle = {International Conference on Software Engineering},
file = {:Users/nernst/pdfs/Easterbrook, Chechik - 2001 - A framework for multi-valued reasoning over inconsistent viewpoints.pdf:pdf},
keywords = {inconsistent model reasoning viewpoints},
month = {September},
pages = {411--420},
publisher = {IEEE Computer Society},
title = {{A framework for multi-valued reasoning over inconsistent viewpoints}},
year = {2001}
}
@article{benestad09,
abstract = {Understanding, managing and reducing costs and risks inherent in change are key challenges of software maintenance and evolution, addressed in empirical studies with many different research approaches. Change-based studies analyze data that describes the individual changes made to software systems. This approach can be effective in order to discover cost and risk factors that are hidden at more aggregated levels. However, it is not trivial to derive appropriate measures of individual changes for specific measure- ment goals. The purpose of this review is to improve change-based studies by (1) summarizing how attributes of changes have been measured to reach specific study goals and (2) describing current achieve- ments and challenges, leading to a guide for future change-based studies. Thirty-four papers conformed to the inclusion criteria. Forty-three attributes of changes were identified, and classified according to a conceptual model developed for the purpose of this classification. The goal of each study was to either characterize the evolution process, to assess causal factors of cost and risk, or to predict costs and risks. Effective accumulation of knowledge across change-based studies requires precise definitions of attributes and measures of change. We recommend that new change-based studies base such definitions on the proposed conceptual model.},
address = {Simula Research Laboratory, P.O. Box 134, 1325 Lysaker, Norway; University of Oslo, Norway},
author = {Benestad, Hans Christian and Anda, Bente and Arisholm, Erik},
doi = {10.1002/smr.412},
file = {:Users/nernst/pdfs/Benestad, Anda, Arisholm - 2009 - Understanding software maintenance and evolution by analyzing individual changes a literature review.pdf:pdf},
journal = {Journal of Software Maintenance and Evolution: Research and Practice},
keywords = {imported},
pages = {n/a},
title = {{Understanding software maintenance and evolution by analyzing individual changes: a literature review}},
volume = {9999},
year = {2009}
}
@article{Ko2006,
author = {Ko, A. J. and Myers, Brad},
doi = {10.1109/VLHCC.2006.3},
file = {:Users/nernst/pdfs/Ko, Myers - 2006 - A Linguistic Analysis of How People Describe Software Problems.pdf:pdf},
isbn = {0-7695-2586-5},
journal = {Journal of Visual Languages and Human-Centric Computing},
pages = {127--134},
publisher = {Ieee},
title = {{A Linguistic Analysis of How People Describe Software Problems}},
year = {2006}
}
@inproceedings{Poshyvanyk2007,
author = {Poshyvanyk, Denys and Marcus, Andrian},
booktitle = {International Conference on Program Comprehension},
doi = {10.1109/ICPC.2007.13},
file = {:Users/nernst/pdfs/Poshyvanyk, Marcus - 2007 - Combining Formal Concept Analysis with Information Retrieval for Concept Location in Source Code.pdf:pdf},
isbn = {0-7695-2860-0},
issn = {1063-6897},
month = {June},
pages = {37--48},
publisher = {Ieee},
title = {{Combining Formal Concept Analysis with Information Retrieval for Concept Location in Source Code}},
year = {2007}
}
@inproceedings{Marcus2005,
author = {Marcus, A. and Rajlich, V. and Buchta, J. and Petrenko, M. and Sergeyev, A.},
booktitle = {International Workshop on Program Comprehension},
file = {:Users/nernst/pdfs/Marcus et al. - 2005 - Static techniques for concept location in object-oriented code.pdf:pdf},
pages = {33â€“42},
title = {{Static techniques for concept location in object-oriented code}},
year = {2005}
}
@inproceedings{Poshyvanyk2006,
author = {Gueheneuc, Yann-Gael and Poshyvanyk, Denys and Marcus, a. and Rajlich, V. and Antoniol, Giuliano},
booktitle = {International Conference on Program Comprehension},
doi = {10.1109/ICPC.2006.17},
file = {:Users/nernst/pdfs/Gueheneuc et al. - 2006 - Combining Probabilistic Ranking and Latent Semantic Indexing for Feature Identification.pdf:pdf},
isbn = {0-7695-2601-2},
pages = {137--148},
publisher = {Ieee},
title = {{Combining Probabilistic Ranking and Latent Semantic Indexing for Feature Identification}},
year = {2006}
}
@inproceedings{Kuhn2005,
author = {Kuhn, A. and Ducasse, Stephane and Girba, T.},
booktitle = {International Working Conference on Reverse Engineering},
doi = {10.1109/WCRE.2005.16},
file = {:Users/nernst/pdfs/Kuhn, Ducasse, Girba - 2005 - Enriching Reverse Engineering with Semantic Clustering.pdf:pdf},
isbn = {0-7695-2474-5},
keywords = {and only a matter,clustering,concept loca-,e,g,of correct structure and,reverse engineering,semantic analysis,since the communication with,syntax,ter,the,the machine is formal,tion},
pages = {133--142},
publisher = {Ieee},
title = {{Enriching Reverse Engineering with Semantic Clustering}},
year = {2005}
}
@article{Kuhn2007,
author = {Kuhn, a and Ducasse, Stephane and Girba, T},
doi = {10.1016/j.infsof.2006.10.017},
file = {:Users/nernst/pdfs/Kuhn, Ducasse, Girba - 2007 - Semantic clustering Identifying topics in source code.pdf:pdf},
issn = {09505849},
journal = {Information and Software Technology},
keywords = {clustering,latent semantic indexing,reverse engineering,visualization},
month = {March},
number = {3},
pages = {230--243},
title = {{Semantic clustering: Identifying topics in source code}},
volume = {49},
year = {2007}
}
@article{Blei2003,
author = {Blei, David M. and Ng, Andrew Y. and Jordan, Michael I},
doi = {10.1162/jmlr.2003.3.4-5.993},
editor = {Lafferty, John},
file = {:Users/nernst/pdfs/Blei, Ng, Jordan - 2003 - Latent Dirichlet Allocation.pdf:pdf},
issn = {1532-4435},
journal = {Journal of Machine Learning Research},
month = {May},
number = {4-5},
pages = {993--1022},
title = {{Latent Dirichlet Allocation}},
volume = {3},
year = {2003}
}
@article{Linstead2008,
author = {Linstead, Erik and Rigor, Paul and Bajracharya, Sushil and Lopes, Cristina and Baldi, Pierre},
file = {:Users/nernst/pdfs/Linstead et al. - 2008 - Mining internet-scale software repositories.pdf:pdf},
journal = {Advances in Neural Information Processing Systems},
title = {{Mining internet-scale software repositories}},
volume = {20},
year = {2008}
}
@article{Linstead2007,
author = {Linstead, Erik and Rigor, Paul and Bajracharya, Sushil and Lopes, Cristina and Baldi, Pierre},
doi = {10.1109/MSR.2007.20},
file = {:Users/nernst/pdfs/Linstead et al. - 2007 - Mining Eclipse Developer Contributions via Author-Topic Models.pdf:pdf},
isbn = {0-7695-2950-X},
journal = {International Workshop on Mining Software Repositories at ICSE},
month = {May},
pages = {30--30},
publisher = {Ieee},
title = {{Mining Eclipse Developer Contributions via Author-Topic Models}},
year = {2007}
}
@article{Canfora2006,
address = {New York, New York, USA},
author = {Canfora, Gerardo and Cerulo, Luigi},
doi = {10.1145/1141277.1141693},
file = {:Users/nernst/pdfs/Canfora, Cerulo - 2006 - Supporting change request assignment in open source development.pdf:pdf},
isbn = {1595931082},
journal = {Symposium on Applied computing},
keywords = {information retrieval,maintenance task assign-,ment,mining software repositories},
pages = {1767},
publisher = {ACM Press},
title = {{Supporting change request assignment in open source development}},
year = {2006}
}
@inproceedings{Rosen-Zvi2004,
author = {Rosen-Zvi, M. and Griffiths, T. and Steyvers, M. and Smyth, P.},
booktitle = {Conference on Uncertainty in artificial intelligence},
file = {:Users/nernst/pdfs/Rosen-Zvi et al. - 2004 - The author-topic model for authors and documents.pdf:pdf},
pages = {487â€“494},
title = {{The author-topic model for authors and documents}},
year = {2004}
}
@inproceedings{Ugurel2002,
author = {Ugurel, S. and Krovetz, R. and Giles, C.L.},
booktitle = {International conference on Knowledge discovery and data mining},
file = {:Users/nernst/pdfs/Ugurel, Krovetz, Giles - 2002 - What's the code automatic classification of source code archives.pdf:pdf},
pages = {632â€“638},
publisher = {ACM New York, NY, USA},
title = {{What's the code?: automatic classification of source code archives}},
year = {2002}
}
@article{BÃ¸egh2008,
abstract = {A new standard on software quality requirements, ISO/IEC 25030, takes a systems perspective and suggests specifying requirements as measures and associated target values.},
author = {B\o egh, J\o rgen},
doi = {10.1109/MS.2008.30},
file = {:Users/nernst/pdfs/B\o egh - 2008 - A New Standard for Quality Requirements.pdf:pdf},
issn = {0740-7459},
journal = {IEEE Software},
number = {2},
pages = {57--63},
title = {{A New Standard for Quality Requirements}},
volume = {25},
year = {2008}
}
@inproceedings{Cleland-Huang2006,
abstract = {This paper introduces an information retrieval based approach for automating the detection and classification of non-functional requirements (NFRs). Early detection of NFRs is useful because it enables system level constraints to be considered and incorporated into early architectural designs as opposed to being refactored in at a later time. Candidate NFRs can be detected in both structured and unstructured documents, including requirements specifications that contain scattered and non-categorized NFRs, and freeform documents such as meeting minutes, interview notes, and memos containing stakeholder comments documenting their NFR related needs. This paper describes the classification algorithm and then evaluates its effectiveness in an experiment based on fifteen requirements specifications developed as term projects by MS students at DePaul University. An additional case study is also described in which the approach is used to classifying NFRs from a large free form requirements document obtained from Siemens Logistics and Automotive Organization},
address = {Minneapolis, Minnesota},
author = {Cleland-Huang, Jane and Settimi, Raffaella and Zou, Xuchang and Solc, Peter},
booktitle = {International Requirements Engineering Conference},
doi = {10.1109/RE.2006.65},
file = {:Users/nernst/pdfs/Cleland-Huang et al. - 2006 - The Detection and Classification of Non-Functional Requirements with Application to Early Aspects.pdf:pdf},
isbn = {0-7695-2555-5},
pages = {39--48},
publisher = {IEEE},
title = {{The Detection and Classification of Non-Functional Requirements with Application to Early Aspects}},
year = {2006}
}
@inproceedings{lukins08wcre,
address = {Antwerp, Belgium},
author = {Lukins, Stacy K. and Kraft, Nicholas A. and Etzkorn, Letha H.},
booktitle = {Working Conference on Reverse Engineering},
doi = {10.1109/WCRE.2008.33},
isbn = {978-0-7695-3429-9},
pages = {155--164},
title = {{Source Code Retrieval for Bug Localization Using Latent Dirichlet Allocation}},
year = {2008}
}
@inproceedings{Linstead2008a,
abstract = {We develop and apply unsupervised statistical topic models, in particular latent Dirichlet allocation, to identify functional components of source code and study their evolution over multiple project versions. We present results for two large, open source Java projects, Eclipse and Argo UML, which are well-known and well-studied within the software mining community. Our results demonstrate the effectiveness of probabilistic topic models in automatically summarizing the temporal dynamics of software concerns, with direct application to project management and program understanding. In addition to detecting the emergence of topics on the release timeline which represent integration points for key source code functionality, our techniques can also be used to pinpoint refactoring events in the underlying software design, as well as to identify general programming concepts whose prevalence is dependent only of the size of the code base to be analyzed. Complete results are available from our supplementary materials website at http://sourcerer.ics.uci.edu/icmla2008/software\_evolution.html.},
address = {San Diego},
author = {Linstead, E. and Lopes, C. and Baldi, P.},
booktitle = {International Conference on Machine Learning and Applications},
doi = {10.1109/ICMLA.2008.47},
isbn = {978-0-7695-3495-4},
pages = {813--818},
title = {{An Application of Latent Dirichlet Allocation to Analyzing Software Evolution}},
year = {2008}
}
